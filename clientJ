using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Net;
using System.Net.Sockets;
using System.Diagnostics;

namespace clientJ
{
    class Program
    {
        private static string host = "192.168.1.108";
        private static int port = 8888;
        private static int bufferSize = 1024;
        static IPAddress ip = IPAddress.Parse(host);
        static IPEndPoint ipe = new IPEndPoint(ip, port);
        private static int count = 0;//表示对话序号
        private static string userName = null;
        static void Main(string[] args)
        {
            Console.WriteLine("请输入用户名，按Enter结束。");
            userName = Console.ReadLine();
            if (userName != string.Empty) 
            {
                Socket s = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
                try
                {
                    s.Connect(ipe);
                    Console.WriteLine("成功连接到{0}。", s.RemoteEndPoint);
                    Console.WriteLine("请输入要发送给服务器的话，按Enter发送。");
                }
                catch (Exception ex)
                {
                    Debug.WriteLine(ex);
                    throw;
                }
                Thread clientTh = new Thread(SendToServer);
                clientTh.Start(s);
                Thread recTh = new Thread(RecMsg);
                recTh.Start(s);
            }          
        }
        private static void RecMsg(object o)
        {
            Socket connSocket = o as Socket;
            while (true)
            {
                byte[] buffer = new Byte[bufferSize];
                try
                {
                    int length = connSocket.Receive(buffer);
                    byte[] realBuffer = new Byte[length];
                    Array.Copy(buffer, 0, realBuffer, 0, length);
                    string str = System.Text.Encoding.Default.GetString(realBuffer);
                    Console.Write("[{0}] ", count++);
                    Console.WriteLine("{0}说：{1}.", connSocket.RemoteEndPoint, str);
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex);
                    Console.ReadKey();
                    break;
                }
            }
        }
        private static void SendToServer(object o)
        {
            Socket socket = o as Socket;
            while (true)
            {
                try
                {
                    string str = Console.ReadLine();
                    if (str != string.Empty)
                    {
                        byte[] bt = Encoding.Default.GetBytes(userName +" 说: " +str);
                        socket.Send(bt, bt.Length, 0);
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine("发送失败。");
                    Debug.WriteLine(ex);
                    throw;
                }
            }
        }
    }
}
